{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC560\\uB4DC\\uD2B8\\uB77C\\uC774\\uBE0C\\\\Desktop\\\\react-nodebird-re-exercise\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 400) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), mainPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 46\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/애드트라이브/Desktop/react-nodebird-re-exercise/prepare/front/pages/index.js"],"names":["useEffect","AppLayout","useSelector","useDispatch","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","index","id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACK,IAAhB,CAAjE;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASiB,QAAT,GAAoB;AAChB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIV,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACnCN,UAAAA,QAAQ,CAAC;AACLQ,YAAAA,IAAI,EAAEV;AADD,WAAD,CAAR;AAGH;AACJ;AACJ;;AACDY,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACH,KAFD;AAGH,GAdQ,EAcN,CAACJ,YAAD,EAAeC,gBAAf,CAdM,CAAT;AAgBA,sBACI,QAAC,SAAD;AAAA,eACML,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADZ,EAEMG,SAAS,CAACc,GAAV,CAAc,CAACX,IAAD,EAAOY,KAAP,kBAAiB,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEZ;AAA9B,OAAeA,IAAI,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA,YAA/B,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjCD;;AAmCA,eAAerB,IAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector(state => state.user);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 400) {\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, [hasMorePosts, loadPostsLoading])\r\n\r\n    return (\r\n        <AppLayout>\r\n            { me && <PostForm/> }\r\n            { mainPosts.map((post, index) => <PostCard key={post.id} post={post}/>) }\r\n        </AppLayout>\r\n    )\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}