{"ast":null,"code":"import { delay, put, all, takeLatest, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.get('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogout)]);\n}","map":{"version":3,"sources":["C:/Users/서진웅/OneDrive/바탕 화면/react-nodebird-exercise-re/prepare/front/sagas/user.js"],"names":["delay","put","all","takeLatest","fork","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","get","logOut","watchLogIn","watchLogout","userSaga"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,UAA1B,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOK,GAAP,EAAY;AACV,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASO,SAAT,GAAsB;AAClB,SAAOT,KAAK,CAACU,GAAN,CAAU,aAAV,CAAP;AACH;;AAED,UAAUC,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOC,GAAP,EAAY;AACV,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,iBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,UAAV,GAAuB;AACnB,QAAMd,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACH;;AACD,UAAUS,WAAV,GAAwB;AACpB,QAAMf,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNE,IAAI,CAACa,UAAD,CADE,EAENb,IAAI,CAACc,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { delay, put, all, takeLatest, fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI (data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction logOutAPI () {\r\n    return axios.get('/api/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\nfunction* watchLogout() {\r\n    yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogout),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}